The ''2-matrix_divided'' module
=============================

Importing ''2-matrix_divided'' from the ''2-matrix_divided module''.

	>>> test1 = __import__('2-matrix_divided').matrix_divided

Requirements checking:

    SHEBAN:
    >>> import os
    >>> os.popen("cat -e 2-matrix_divided.py | head -1").read()[0:-2]
    '#!/usr/bin/python3'

    MODULE DOCSTRING:
	>>> m = __import__("2-matrix_divided").__doc__
	>>> len(m) > 1
	True

    FUNCTION DOCSTRING:
	>>> f = __import__("2-matrix_divided").matrix_divided.__doc__
	>>> len(f) > 1
	True

    >>> import os
    >>> os.popen("pep8 2-matrix_divided.py").read()
    ''

    NEW_LINE AT THE END OF THE FILE
	>>> os.popen("cat -e 2-matrix_divided.py | tail -1").read()[-1]
	'\n'


Output
    stdrn case 
    >>> test1([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> try: test1([["a", 2, 3], [4, 5, 6]], 3)
    ... except TypeError as er: print(er)
    matrix must be a matrix (list of lists) of integers/floats
    
    >>> try: test1([[2, 3], [4, 5, 6]], 3)
    ... except TypeError as er: print(er)
    Each row of the matrix must have the same size

    >>> try: test1([[2, 3], [4, 5, 6]], 0)
    ... except ZeroDivisionError as er: print(er)
    division by zero

    >>> try: test1([[2, 3], [4, 5, 6]], "a")
    ... except TypeError as er: print(er)
    div must be a number
